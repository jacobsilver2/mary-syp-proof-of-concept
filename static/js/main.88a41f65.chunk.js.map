{"version":3,"sources":["provider.js","Form.js","Results.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStateContext","createContext","GlobalDispatchContext","initialState","description","names","faciliated","egalitarian","proxied","directed","reducer","state","action","type","title","name","Error","GlobalContextProvider","children","useReducer","dispatch","Provider","value","StyledContainer","styled","div","initialValues","FormComponent","useContext","onSubmit","values","setSubmitting","isSubmitting","style","display","flexDirection","gap","padding","htmlFor","component","as","disabled","StyledGrid","StyledColumn","Results","columns","Object","entries","map","App","className","Form","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.88a41f65.chunk.js","sourcesContent":["import React, { useReducer, createContext } from \"react\";\n\nexport const GlobalStateContext = createContext();\nexport const GlobalDispatchContext = createContext();\n\nconst initialState = {\n  \"hub and spoke\": { description: \"to come\", names: [] },\n  faciliated: { description: \"to come\", names: [] },\n  egalitarian: { description: \"to come\", names: [] },\n  \"mission control\": { description: \"to come\", names: [] },\n  \"team of teams\": { description: \"to come\", names: [] },\n  proxied: { description: \"to come\", names: [] },\n  directed: { description: \"to come\", names: [] },\n  \"servant-led\": { description: \"to come\", names: [] },\n};\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case \"ADD\": {\n      return {\n        ...state,\n        [action.title]: {\n          description: state[action.title].description,\n          names: [...state[action.title].names, action.name],\n        },\n      };\n    }\n    default:\n      throw new Error(\"Bad Action Type\");\n  }\n}\n\nconst GlobalContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <GlobalStateContext.Provider value={state}>\n      <GlobalDispatchContext.Provider value={dispatch}>\n        {children}\n      </GlobalDispatchContext.Provider>\n    </GlobalStateContext.Provider>\n  );\n};\n\nexport default GlobalContextProvider;\n","import { Formik, Form, Field, ErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { GlobalDispatchContext } from \"./provider\";\n\nconst StyledContainer = styled.div`\n  border: 1px solid white;\n`;\n\nconst initialValues = { title: \"hub and spoke\", name: \"\" };\n\nconst FormComponent = () => {\n  const dispatch = useContext(GlobalDispatchContext);\n  return (\n    <StyledContainer>\n      <h1>FORM</h1>\n      <Formik\n        initialValues={initialValues}\n        onSubmit={(values, { setSubmitting }) => {\n          dispatch({ type: \"ADD\", title: values.title, name: values.name });\n          setSubmitting(false);\n        }}\n      >\n        {({ isSubmitting }) => (\n          <Form\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              gap: \"2rem\",\n              padding: \"2rem\",\n            }}\n          >\n            <label htmlFor=\"name\">Name</label>\n            <Field type=\"text\" name=\"name\" />\n            <ErrorMessage name=\"name\" component=\"StyledContainer\" />\n            <label htmlFor=\"title\">Title</label>\n            <Field type=\"text\" as=\"select\" name=\"title\">\n              <option name=\"hub and spoke\" value=\"hub and spoke\">\n                Hub and Spoke\n              </option>\n              <option name=\"faciliated\" value=\"faciliated\">\n                faciliated\n              </option>\n              <option name=\"egalitarian\" value=\"egalitarian\">\n                egalitarian\n              </option>\n              <option name=\"mission control\" value=\"mission control\">\n                mission control\n              </option>\n              <option name=\"team of teams\" value=\"team of teams\">\n                team of teams\n              </option>\n              <option name=\"proxied\" value=\"proxied\">\n                proxied\n              </option>\n              <option name=\"directed\" value=\"directed\">\n                directed\n              </option>\n              <option name=\"servant-led\" value=\"servant-led\">\n                servant-led\n              </option>\n            </Field>\n            <ErrorMessage name=\"title\" component=\"div\" />\n            <button type=\"submit\" disabled={isSubmitting}>\n              Submit\n            </button>\n          </Form>\n        )}\n      </Formik>\n    </StyledContainer>\n  );\n};\n\nexport default FormComponent;\n","import styled from \"styled-components\";\nimport { useContext } from \"react\";\nimport { GlobalStateContext } from \"./provider\";\n\nconst StyledContainer = styled.div`\n  border: 1px solid white;\n`;\n\nconst StyledGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(8, 1fr);\n`;\n\nconst StyledColumn = styled.div`\n  display: flex;\n  flex-direction: column-reverse;\n  height: 60vh;\n  /* align-items: end; */\n  /* justify-items: end; */\n  /* grid-template-rows: auto; */\n  gap: 10px;\n  /* grid-gap: 10px; */\n  p {\n    flex: 1;\n  }\n`;\n\nconst Results = () => {\n  const state = useContext(GlobalStateContext);\n\n  const columns = Object.entries(state).map((title) => (\n    <StyledColumn>\n      <h5>{title[0]}</h5>\n      {title[1].names.map((name) => (\n        <div>\n          <p>{name}</p>\n        </div>\n      ))}\n    </StyledColumn>\n  ));\n\n  return (\n    <StyledContainer>\n      <h1>RESULTS</h1>\n      <StyledGrid>{columns}</StyledGrid>\n    </StyledContainer>\n  );\n};\n\nexport default Results;\n","import \"./App.css\";\nimport Form from \"./Form\";\nimport Results from \"./Results\";\nimport styled from \"styled-components\";\nimport GlobalContextProvider from \"./provider\";\n\nfunction App() {\n  return (\n    <GlobalContextProvider>\n      <div className=\"App\">\n        <header className=\"App-header\">\n          <Form />\n          <Results />\n        </header>\n      </div>\n    </GlobalContextProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}